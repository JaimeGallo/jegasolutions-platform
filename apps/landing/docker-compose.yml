version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: landing-postgres
    environment:
      POSTGRES_DB: jegasolutions_landing
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - landing-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: landing-backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/jegasolutions_landing
    ports:
      - '5014:8080'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - landing-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: landing-frontend
    environment:
      - VITE_API_URL=http://localhost:5014/api
    ports:
      - '5173:80'
    depends_on:
      - backend
    networks:
      - landing-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  landing-network:
    driver: bridge

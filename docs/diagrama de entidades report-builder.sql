-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."__EFMigrationsHistory"
(
    migration_id character varying(150) COLLATE pg_catalog."default" NOT NULL,
    product_version character varying(32) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pk___ef_migrations_history PRIMARY KEY (migration_id)
);

CREATE TABLE IF NOT EXISTS public.ai_insights
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    report_submission_id integer NOT NULL,
    insight_type character varying(50) COLLATE pg_catalog."default" NOT NULL,
    title character varying(200) COLLATE pg_catalog."default" NOT NULL,
    content text COLLATE pg_catalog."default" NOT NULL,
    confidence_score numeric NOT NULL,
    metadata jsonb,
    generated_at timestamp with time zone NOT NULL DEFAULT now(),
    ai_model character varying(100) COLLATE pg_catalog."default",
    "TenantId" integer NOT NULL DEFAULT 1,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT now(),
    "UpdatedAt" timestamp with time zone DEFAULT now(),
    "DeletedAt" timestamp with time zone,
    CONSTRAINT "PK_ai_insights" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.areas
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default" NOT NULL,
    code character varying(20) COLLATE pg_catalog."default" NOT NULL,
    is_active boolean NOT NULL DEFAULT true,
    "TenantId" integer NOT NULL DEFAULT 1,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT now(),
    "UpdatedAt" timestamp with time zone DEFAULT now(),
    "DeletedAt" timestamp with time zone,
    CONSTRAINT "PK_areas" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.consolidated_template_sections
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    consolidated_template_id integer NOT NULL,
    area_id integer NOT NULL,
    section_title character varying(200) COLLATE pg_catalog."default" NOT NULL,
    section_description character varying(500) COLLATE pg_catalog."default" NOT NULL,
    status character varying(20) COLLATE pg_catalog."default" NOT NULL DEFAULT 'pending'::character varying,
    "order" integer NOT NULL DEFAULT 1,
    section_deadline timestamp with time zone,
    assigned_at timestamp with time zone,
    completed_at timestamp with time zone,
    completed_by_user_id integer,
    section_configuration_json text COLLATE pg_catalog."default" NOT NULL,
    section_data_json text COLLATE pg_catalog."default",
    "TenantId" integer NOT NULL DEFAULT 1,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT now(),
    "UpdatedAt" timestamp with time zone DEFAULT now(),
    "DeletedAt" timestamp with time zone,
    CONSTRAINT "PK_consolidated_template_sections" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.consolidated_templates
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(200) COLLATE pg_catalog."default" NOT NULL,
    description character varying(500) COLLATE pg_catalog."default" NOT NULL,
    status character varying(20) COLLATE pg_catalog."default" NOT NULL DEFAULT 'draft'::character varying,
    period character varying(50) COLLATE pg_catalog."default" NOT NULL,
    deadline timestamp with time zone,
    configuration_json text COLLATE pg_catalog."default" NOT NULL,
    created_by_user_id integer NOT NULL,
    "TenantId" integer NOT NULL DEFAULT 1,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT now(),
    "UpdatedAt" timestamp with time zone DEFAULT now(),
    "DeletedAt" timestamp with time zone,
    CONSTRAINT "PK_consolidated_templates" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.excel_uploads
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    area_id integer NOT NULL,
    file_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    file_path character varying(500) COLLATE pg_catalog."default" NOT NULL,
    file_size bigint NOT NULL,
    period character varying(50) COLLATE pg_catalog."default" NOT NULL,
    upload_date timestamp with time zone NOT NULL DEFAULT now(),
    uploaded_by_user_id integer NOT NULL,
    extracted_json_data text COLLATE pg_catalog."default",
    processing_status character varying(20) COLLATE pg_catalog."default" NOT NULL DEFAULT 'pending'::character varying,
    error_message text COLLATE pg_catalog."default",
    processed_at timestamp with time zone,
    metadata_json text COLLATE pg_catalog."default",
    "TenantId" integer NOT NULL DEFAULT 1,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT now(),
    "UpdatedAt" timestamp with time zone DEFAULT now(),
    "DeletedAt" timestamp with time zone,
    CONSTRAINT "PK_excel_uploads" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.report_submissions
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    template_id integer NOT NULL,
    area_id integer NOT NULL,
    submitted_by_user_id integer NOT NULL,
    title character varying(200) COLLATE pg_catalog."default" NOT NULL,
    content text COLLATE pg_catalog."default" NOT NULL,
    status character varying(20) COLLATE pg_catalog."default" NOT NULL DEFAULT 'draft'::character varying,
    submitted_at timestamp with time zone,
    approved_at timestamp with time zone,
    approved_by_user_id integer,
    rejection_reason text COLLATE pg_catalog."default",
    period_start timestamp with time zone NOT NULL,
    period_end timestamp with time zone NOT NULL,
    "TenantId" integer NOT NULL DEFAULT 1,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT now(),
    "UpdatedAt" timestamp with time zone DEFAULT now(),
    "DeletedAt" timestamp with time zone,
    CONSTRAINT "PK_report_submissions" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.templates
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default" NOT NULL,
    configuration_json text COLLATE pg_catalog."default" NOT NULL,
    area_id integer,
    "TenantId" integer NOT NULL DEFAULT 1,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT now(),
    "UpdatedAt" timestamp with time zone DEFAULT now(),
    "DeletedAt" timestamp with time zone,
    CONSTRAINT "PK_templates" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    password_hash text COLLATE pg_catalog."default" NOT NULL,
    full_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    role character varying(20) COLLATE pg_catalog."default" NOT NULL DEFAULT 'User'::character varying,
    is_active boolean NOT NULL DEFAULT true,
    "TenantId" integer NOT NULL DEFAULT 1,
    "CreatedAt" timestamp with time zone NOT NULL DEFAULT now(),
    "UpdatedAt" timestamp with time zone DEFAULT now(),
    "DeletedAt" timestamp with time zone,
    CONSTRAINT "PK_users" PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.ai_insights
    ADD CONSTRAINT "FK_ai_insights_report_submissions_report_submission_id" FOREIGN KEY (report_submission_id)
    REFERENCES public.report_submissions (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_ai_insights_report_submission_id"
    ON public.ai_insights(report_submission_id);


ALTER TABLE IF EXISTS public.consolidated_template_sections
    ADD CONSTRAINT "FK_consolidated_template_sections_areas_area_id" FOREIGN KEY (area_id)
    REFERENCES public.areas (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE RESTRICT;
CREATE INDEX IF NOT EXISTS "IX_consolidated_template_sections_area_id"
    ON public.consolidated_template_sections(area_id);


ALTER TABLE IF EXISTS public.consolidated_template_sections
    ADD CONSTRAINT "FK_consolidated_template_sections_consolidated_templates_conso~" FOREIGN KEY (consolidated_template_id)
    REFERENCES public.consolidated_templates (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_consolidated_template_sections_consolidated_template_id"
    ON public.consolidated_template_sections(consolidated_template_id);


ALTER TABLE IF EXISTS public.consolidated_template_sections
    ADD CONSTRAINT "FK_consolidated_template_sections_users_completed_by_user_id" FOREIGN KEY (completed_by_user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;
CREATE INDEX IF NOT EXISTS "IX_consolidated_template_sections_completed_by_user_id"
    ON public.consolidated_template_sections(completed_by_user_id);


ALTER TABLE IF EXISTS public.consolidated_templates
    ADD CONSTRAINT "FK_consolidated_templates_users_created_by_user_id" FOREIGN KEY (created_by_user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE RESTRICT;
CREATE INDEX IF NOT EXISTS "IX_consolidated_templates_created_by_user_id"
    ON public.consolidated_templates(created_by_user_id);


ALTER TABLE IF EXISTS public.excel_uploads
    ADD CONSTRAINT "FK_excel_uploads_areas_area_id" FOREIGN KEY (area_id)
    REFERENCES public.areas (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE RESTRICT;
CREATE INDEX IF NOT EXISTS "IX_excel_uploads_area_id"
    ON public.excel_uploads(area_id);


ALTER TABLE IF EXISTS public.excel_uploads
    ADD CONSTRAINT "FK_excel_uploads_users_uploaded_by_user_id" FOREIGN KEY (uploaded_by_user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE RESTRICT;
CREATE INDEX IF NOT EXISTS "IX_excel_uploads_uploaded_by_user_id"
    ON public.excel_uploads(uploaded_by_user_id);


ALTER TABLE IF EXISTS public.report_submissions
    ADD CONSTRAINT "FK_report_submissions_areas_area_id" FOREIGN KEY (area_id)
    REFERENCES public.areas (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE RESTRICT;
CREATE INDEX IF NOT EXISTS "IX_report_submissions_area_id"
    ON public.report_submissions(area_id);


ALTER TABLE IF EXISTS public.report_submissions
    ADD CONSTRAINT "FK_report_submissions_templates_template_id" FOREIGN KEY (template_id)
    REFERENCES public.templates (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE RESTRICT;
CREATE INDEX IF NOT EXISTS "IX_report_submissions_template_id"
    ON public.report_submissions(template_id);


ALTER TABLE IF EXISTS public.templates
    ADD CONSTRAINT "FK_templates_areas_area_id" FOREIGN KEY (area_id)
    REFERENCES public.areas (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE RESTRICT;
CREATE INDEX IF NOT EXISTS "IX_templates_area_id"
    ON public.templates(area_id);

END;